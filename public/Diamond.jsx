/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: Kugatsu Tsukai 3D Models Hub (https://sketchfab.com/KugatsuT)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/blue-diamond-free-giveaway-618d614891354c1f86f07845080e13e7
Title: Blue Diamond - Free Giveaway
*/

import { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { useFrame } from "@react-three/fiber";

export default function Diamond(props) {
  const { nodes, materials } = useGLTF("/diamond-transformed.glb");
  const modelRef = useRef();

  useFrame((state) => {
    modelRef.current.position.y =
      -1.5 + Math.sin(state.clock.elapsedTime) * 0.15;

    modelRef.current.rotation.y = Math.sin(state.clock.elapsedTime);
  });

  return (
    <group {...props} dispose={null} ref={modelRef}>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.defaultMaterial.geometry}
        material={materials.DiamondOutside}
        position={[0, 1.5, 0]}
        rotation={[0.3, 0, 0]}
      />
    </group>
  );
}

useGLTF.preload("/diamond-transformed.glb");
